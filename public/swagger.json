{
  "swagger": "2.0",
  "info": {
    "description": "This is Partymaker server.",
    "version": "1.0.0",
    "title": "Swagger Partymaker",
    "contact": {
      "email": "kostyuk.pavel.09@gmail.com"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "auth",
      "description": "User authentication"
    },
    {
      "name": "users",
      "description": "Users"
    },
    {
      "name": "rooms",
      "description": "rooms"
    },
    {
      "name": "messages",
      "description": "messages"
    },
    {
      "name": "guests",
      "description": "guests"
    }
  ],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "operationId": "login",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "required": true,
            "type": "string",
            "format": "email",
            "default": "regular@mailinator.com"
          },
          {
            "in": "formData",
            "name": "password",
            "required": true,
            "type": "string",
            "format": "password",
            "default": "qwerty123"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "bearer"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjExLCJkYXRhIjp7Im5hbWUiOiLQn9Cw0LLQtdC7IN..."
                },
                "refreshToken": {
                  "type": "string",
                  "example": "f24faf2f153a36db2809505cad9c4e5b9ZcsMbB8nwUSkJmyvOjzktu5b9ZcsMbB8nwUSkJmyvOjzktu..."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          }
        }
      }
    },
    "/auth/social": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user using google or facebook",
        "operationId": "login-social",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "name",
                "email",
                "provider_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Павел Костюк"
                },
                "email": {
                  "type": "string",
                  "example": "kostyk.pavel.09@gmail.com"
                },
                "avatar_url": {
                  "type": "string",
                  "example": "https://lh5.googleusercontent.com/-CMSrZzpBle0/AAAAAAAAAAI/AAAAAAAAAGY/fg4fG1dIPr4/s96-c/photo.jpg"
                },
                "provider": {
                  "type": "string",
                  "example": "google",
                  "enum": [
                    "facebook",
                    "google"
                  ]
                },
                "provider_id": {
                  "type": "string",
                  "example": "117091234537766205437"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "bearer"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjExLCJkYXRhIjp7Im5hbWUiOiLQn9Cw0LLQtdC7IN..."
                },
                "refreshToken": {
                  "type": "string",
                  "example": "f24faf2f153a36db2809505cad9c4e5b9ZcsMbB8nwUSkJmyvOjzktu5b9ZcsMbB8nwUSkJmyvOjzktu..."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register user",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "name",
                "email",
                "password",
                "phone"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Pavel Kostyuk"
                },
                "email": {
                  "type": "string",
                  "example": "pavliha@mailinator.com"
                },
                "password": {
                  "type": "string",
                  "example": "qwerty123"
                },
                "phone": {
                  "type": "string",
                  "example": "+380683188524"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "bearer"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjExLCJkYXRhIjp7Im5hbWUiOiLQn9Cw0LLQtdC7IN..."
                },
                "refreshToken": {
                  "type": "string",
                  "example": "f24faf2f153a36db2809505cad9c4e5b9ZcsMbB8nwUSkJmyvOjzktu5b9ZcsMbB8nwUSkJmyvOjzktu..."
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/ValidationError"
          }
        }
      }
    },
    "/auth/activate/{hash}": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "current user",
        "operationId": "auth-activate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "hash",
            "description": "hash from link",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/auth/password/forgot": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "send email with reset link",
        "operationId": "auth-forgot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "This will send email to user with reset link",
            "required": true,
            "schema": {
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kostyk.pavel.09@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/auth/password/reset/{token}": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "reset password with token from email",
        "operationId": "auth-reset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "This will set a new password for user",
            "required": true,
            "schema": {
              "required": [
                "password",
                "password_repeat"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "example": "qwerty123"
                },
                "password_repeat": {
                  "type": "string",
                  "example": "qwerty123"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "current user",
        "operationId": "auth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List of all users",
        "operationId": "user-list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "example": 23
                },
                "perPage": {
                  "type": "number",
                  "example": 10
                },
                "page": {
                  "type": "number",
                  "example": 1
                },
                "lastPage": {
                  "type": "number",
                  "example": 3
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create new user",
        "operationId": "user-create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Show user",
        "operationId": "user-show",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "operationId": "user-update",
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user - superadmin only",
        "operationId": "user-delete",
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/rooms": {
      "get": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "get list of rooms available for the user",
        "operationId": "rooms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Room"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "new room",
        "operationId": "create-room",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create new room",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Идем в боулинг"
                },
                "place_id": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1
                },
                "date": {
                  "type": "string",
                  "example": "2014-06-26 04:07:31"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Room"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    },
    "/rooms/{id}": {
      "get": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "get room",
        "operationId": "room",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Room"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "update room",
        "operationId": "update-room",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update complete room",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "type": "string",
                  "example": "День рождения"
                },
                "place_id": {
                  "type": "integer",
                  "format": "int64",
                  "example": "1"
                },
                "date": {
                  "type": "string",
                  "example": "2014-06-26 04:07:31"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Updated",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Room"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "modify room",
        "operationId": "modify-room",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Modify room",
            "required": true,
            "schema": {
              "properties": {
                "title": {
                  "type": "string",
                  "example": "День рождения"
                },
                "place_id": {
                  "type": "integer",
                  "format": "int64",
                  "example": "1"
                },
                "date": {
                  "type": "string",
                  "example": "2014-06-26 04:07:31"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Updated",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Room"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "rooms"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "delete room",
        "operationId": "delete-room",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    },
    "/rooms/{room_id}/guests": {
      "get": {
        "tags": [
          "guests"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "get list of guests",
        "operationId": "guests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "format": "int64",
            "default": 1
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "guests"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "new guest",
        "operationId": "create-guest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "room_id",
            "type": "integer",
            "required": true,
            "format": "int64",
            "default": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add new guest",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "properties": {
                "user_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Message"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    },
    "/rooms/{room_id}/guests/{id}": {
      "get": {
        "tags": [
          "guests"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "get guest",
        "operationId": "guest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Guest"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "guests"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "delete guest",
        "operationId": "delete-guest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "required": true,
            "default": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    },
    "/rooms/{room_id}/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "get list of messages",
        "operationId": "messages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "room_id",
            "type": "integer",
            "required": true,
            "format": "int64",
            "default": 1
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Message"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "messages"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "new message",
        "operationId": "create-message",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "room_id",
            "type": "integer",
            "required": true,
            "format": "int64",
            "default": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create new message",
            "required": true,
            "schema": {
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "example": "new message"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Message"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        }
      }
    }
  },
  "responses": {
    "ValidationError": {
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "messsage": {
              "type": "string",
              "example": "required validation failed"
            },
            "field": {
              "type": "string",
              "example": "email"
            },
            "validation": {
              "type": "string",
              "example": "required"
            }
          }
        }
      },
      "description": "Validation error"
    },
    "NotFound": {
      "schema": {
        "type": "object",
        "description": "Not Found",
        "properties": {
          "status": {
            "type": "number",
            "example": 404,
            "default": true
          },
          "error": {
            "type": "string",
            "example": "Not Found",
            "default": true
          },
          "message": {
            "type": "string",
            "example": "Does not exist!",
            "default": true
          }
        }
      },
      "description": "Not Found"
    },
    "Forbidden": {
      "schema": {
        "type": "object",
        "description": "Forbidden",
        "properties": {
          "status": {
            "type": "number",
            "example": 403,
            "default": true
          },
          "error": {
            "type": "string",
            "example": "Forbidden",
            "default": true
          },
          "message": {
            "type": "string",
            "example": "You not authorized to perform this action",
            "default": true
          }
        }
      },
      "description": "Access denied"
    },
    "Unauthorized": {
      "schema": {
        "type": "object",
        "description": "Forbidden",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "status": {
                "type": "number",
                "example": 401,
                "default": true
              },
              "name": {
                "type": "string",
                "example": "Unauthorized",
                "default": true
              },
              "message": {
                "type": "string",
                "example": "E_INVALID_JWT_TOKEN: jwt must be provided",
                "default": true
              }
            }
          }
        }
      },
      "description": "Unauthorized"
    },
    "InternalServerError": {
      "schema": {
        "type": "object",
        "description": "Forbidden",
        "properties": {
          "status": {
            "type": "number",
            "example": 500,
            "default": true
          },
          "error": {
            "type": "string",
            "example": "Server error",
            "default": true
          },
          "message": {
            "type": "string",
            "example": "Server error",
            "default": true
          }
        }
      },
      "description": "Internal Server Error"
    }
  },
  "definitions": {
    "Room": {
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "example": "День рождения"
        },
        "place_id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "date": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        },
        "created_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        },
        "updated_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        }
      }
    },
    "Invite": {
      "required": [
        "headline"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "headline": {
          "type": "string",
          "example": "День рождения"
        },
        "background_url": {
          "type": "string",
          "example": "http://api.partymaker.zp.ua/assets/QwRtyQwr2vaEtS.jpeg"
        },
        "address": {
          "type": "string",
          "example": "вул. Червоногвардійська, 48/18,"
        },
        "place_pictures": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "http://api.partymaker.zp.ua/assets/QwRtyQwr2vaEtS.jpeg"
          }
        },
        "room_id": {
          "type": "integer",
          "format": "int64",
          "example": "1"
        },
        "created_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        },
        "updated_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        }
      }
    },
    "User": {
      "required": [
        "name",
        "email",
        "password",
        "phone"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "example": "Pavel Kostyuk"
        },
        "email": {
          "type": "string",
          "example": "pavliha@mailinator.com"
        },
        "phone": {
          "type": "string",
          "example": "+380683188524"
        },
        "avatar_url": {
          "type": "string",
          "example": "http://192.168.0.103:3333/images/dummy/pavliha.jpg"
        },
        "is_superadmin": {
          "type": "boolean",
          "default": false
        },
        "is_active": {
          "type": "boolean",
          "default": true
        },
        "created_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        },
        "updated_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        }
      }
    },
    "Message": {
      "required": [
        "text",
        "created_at",
        "updated_at"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "text": {
          "type": "string",
          "example": "Pavel Kostyuk"
        },
        "created_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        },
        "updated_at": {
          "type": "string",
          "example": "2014-06-26 04:07:31"
        }
      }
    }
  }
}

