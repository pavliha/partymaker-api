{
  "openapi": "3.0.0",
  "info": {"version": "1.0.0", "title": "Partymaker API"},
  "tags": [
    {"name": "auth", "description": "User authentication"},
    {"name": "user", "description": "get user"},
    {"name": "entertainments", "description": "entertainments"},
    {"name": "places", "description": "places"},
    {"name": "photos", "description": "photos"},
    {"name": "uploads", "description": "uploads"}
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login user",
        "requestBody": {
          "description": "Login user using credentials",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "kostyk.pavel.09@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "qwerty123",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {"$ref": "#/components/responses/Authorized"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register user",
        "requestBody": {
          "description": "Register user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pavel Kostyuk",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "example": "pavliha@mailinator.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "example": "qwerty123",
                    "required": true
                  },
                  "phone": {
                    "type": "string",
                    "example": "+380683188524"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {"$ref": "#/components/responses/Authorized"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/auth/activate/{hash}": {
      "post": {
        "tags": ["auth"],
        "summary": "Activate user",
        "parameters": [
          {
            "in": "path",
            "name": "hash",
            "description": "hash from link",
            "required": true
          }
        ],
        "responses": {
          "202": {"description": "Accepted"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/auth/password/forgot": {
      "post": {
        "tags": ["auth"],
        "summary": "Send email with activation link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "pavliha@mailinator.com",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {"description": "Accepted"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/auth/password/reset/{token}": {
      "post": {
        "tags": ["auth"],
        "summary": "Reset password with token from email",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "token from email",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "qwerty123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {"$ref": "#/components/responses/Authorized"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get authenticated user",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Authenticated user",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/User"}
              }
            }
          },
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/entertainments": {
      "get": {
        "summary": "List of entertainments",
        "tags": ["entertainments"],
        "responses": {
          "200": {"$ref": "#/components/responses/Entertainment-extended"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "post": {
        "tags": ["entertainments"],
        "summary": "Create new entertainment",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Entertainment"}
            }
          }
        },
        "responses": {
          "201": {"$ref": "#/components/responses/Entertainment-extended"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/entertainments/sort": {
      "post": {
        "tags": ["entertainments"],
        "summary": "Reorder entertainments",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id:": {
                      "type": "number",
                      "example": 1
                    },
                    "order:": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {"description": "Accepted"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/entertainments/{id}": {
      "get": {
        "tags": ["entertainments"],
        "summary": "Get entertainment",
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "responses": {
          "200": {"$ref": "#/components/responses/Entertainment-extended"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "put": {
        "tags": ["entertainments"],
        "security": [{"bearerAuth": []}],
        "summary": "Update entertainment",
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Entertainment"}
            }
          }
        },
        "responses": {
          "201": {"$ref": "#/components/responses/Entertainment-extended"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/places": {
      "get": {
        "summary": "List of places",
        "tags": ["places"],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Place"}
              }
            }
          },
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "post": {
        "tags": ["places"],
        "security": [{"bearerAuth": []}],
        "summary": "Create new place",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Place"}
            }
          }
        },
        "responses": {
          "201": {"$ref": "#/components/responses/Place-extended"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/places/{id}": {
      "get": {
        "tags": ["places"],
        "summary": "Get place",
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "responses": {
          "200": {"$ref": "#/components/responses/Place-extended"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "put": {
        "tags": ["places"],
        "summary": "Update place",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Place"}
            }
          }
        },
        "responses": {
          "201": {"$ref": "#/components/responses/Place-extended"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/places/{id}/photos": {
      "get": {
        "summary": "List of photos for current place",
        "tags": ["photos"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "responses": {
          "200": {
            "description": "List of photos", "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Photo"
                  }
                }
              }
            }
          },
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "post": {
        "tags": ["photos"],
        "security": [{"bearerAuth": []}],
        "summary": "Create new photo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Photo"}
            }
          }
        },
        "responses": {
          "201": {"$ref": "#/components/responses/Photo"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/places/photos/{id}": {
      "get": {
        "tags": ["photos"],
        "summary": "Get photo",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "responses": {
          "200": {"$ref": "#/components/responses/Photo"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "put": {
        "tags": ["photos"],
        "summary": "Update photo",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Photo"}
            }
          }
        },
        "responses": {
          "202": {"$ref": "#/components/responses/Photo"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      },
      "delete": {
        "summary": "Delete photo",
        "tags": ["photos"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {"$ref": "#/components/parameters/id"}
        ],
        "responses": {
          "204": {"description": "No Content"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/uploads/picture/file": {
      "post": {
        "tags": ["uploads"],
        "summary": "Upload picture from the computer",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "thumbnail or slide",
            "schema": {
              "type": "string",
              "default": "thumbnail"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted", "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/ValidationError"},
          "402": {"$ref": "#/components/responses/Unauthorized"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/uploads/picture/url": {
      "post": {
        "tags": ["uploads"],
        "summary": "Upload picture from url",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "thumbnail or slide",
            "schema": {
              "type": "string",
              "default": "thumbnail"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://example.com/picture.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted", "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            }
          },
          "402": {"$ref": "#/components/responses/Unauthorized"},
          "401": {"$ref": "#/components/responses/ValidationError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/uploads/{filename}": {
      "delete": {
        "tags": ["uploads"],
        "summary": "Delete upload",
        "parameters": [
          {"$ref": "#/components/parameters/filename"}
        ],
        "responses": {
          "204": {"description": "No Content"},
          "404": {"$ref": "#/components/responses/NotFound"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "id": {
        "in": "path",
        "name": "id",
        "schema": {
          "type": "integer",
          "example": 1
        },
        "required": true
      },
      "filename": {
        "in": "path",
        "name": "filename",
        "required": true,
        "schema": {
          "type": "string",
          "example": "picture.jpg"
        }
      }
    },
    "requestBodies": {
    },
    "responses": {
      "Authorized": {
        "description": "Authorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "messsage": {
                    "type": "string",
                    "example": "required validation failed"
                  },
                  "field": {
                    "type": "string",
                    "example": "email"
                  },
                  "validation": {
                    "type": "string",
                    "example": "required"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Not Found",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 404,
                  "default": true
                },
                "error": {
                  "type": "string",
                  "example": "Not Found",
                  "default": true
                },
                "message": {
                  "type": "string",
                  "example": "Does not exist!",
                  "default": true
                }
              }
            }
          }
        },
        "description": "Not Found"
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Forbidden",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 403,
                  "default": true
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden",
                  "default": true
                },
                "message": {
                  "type": "string",
                  "example": "You not authorized to perform this action",
                  "default": true
                }
              }
            }
          }
        },
        "description": "Access denied"
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Forbidden",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 401,
                      "default": true
                    },
                    "name": {
                      "type": "string",
                      "example": "Unauthorized",
                      "default": true
                    },
                    "message": {
                      "type": "string",
                      "example": "E_INVALID_JWT_TOKEN: jwt must be provided",
                      "default": true
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Unauthorized"
      },
      "InternalServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Forbidden",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 500,
                  "default": true
                },
                "error": {
                  "type": "string",
                  "example": "Server error",
                  "default": true
                },
                "message": {
                  "type": "string",
                  "example": "Server error",
                  "default": true
                }
              }
            }
          }
        },
        "description": "Internal Server Error"
      },
      "Entertainment-extended": {
        "description": "Entertainment with all relations",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Entertainment"
                },
                {
                  "type": "object",
                  "properties": {
                    "places": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Place"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Place-extended": {
        "description": "Place with all relations",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Place"
                },
                {
                  "type": "object",
                  "properties": {
                    "requirements": {
                      "$ref": "#/components/schemas/Requirement"
                    },
                    "photos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Photo"
                      }
                    },
                    "contacts": {
                      "$ref": "#/components/schemas/Contact"
                    },
                    "prices": {
                      "$ref": "#/components/schemas/Price"
                    },
                    "additional_services": {
                      "$ref": "#/components/schemas/AdditionalService"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Photo": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/Photo"}
          }
        }
      }
    },
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "bearer"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjExLCJkYXRhIjp7Im5hbWUiOiLQn9Cw0LLQtdC7IN..."
          },
          "refreshToken": {
            "type": "string",
            "example": "f24faf2f153a36db2809505cad9c4e5b9ZcsMbB8nwUSkJmyvOjzktu5b9ZcsMbB8nwUSkJmyvOjzktu..."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "example": "Pavel Kostyuk"
          },
          "email": {
            "type": "string",
            "example": "pavliha@mailinator.com"
          },
          "phone": {
            "type": "string",
            "example": "+380683188524"
          },
          "avatar_url": {
            "type": "string",
            "example": "http://192.168.0.103:3333/images/dummy/pavliha.jpg"
          },
          "is_superadmin": {
            "type": "boolean",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Entertainment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Клуб “Blok-Post”"
          },
          "order": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Place": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Клуб “Blok-Post”",
            "required": true
          },
          "picture_url": {
            "type": "string",
            "example": "http://www.laser-tag.zp.ua/wp-content/uploads/2018/06/cropped-Club-Block-Post..jpg"
          },
          "working_hours": {
            "type": "string",
            "example": "ежедневно с 7:00 до 19:00"
          },
          "price": {
            "type": "string",
            "example": "от 300 грн/чел"
          },
          "entertainment_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Requirement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "min_order_amount": {
            "type": "number",
            "example": 200
          },
          "age_min": {
            "type": "number",
            "example": 10
          },
          "age_max": {
            "type": "number",
            "example": 16
          },
          "players_min": {
            "type": "number",
            "example": 4
          },
          "players_max": {
            "type": "number",
            "example": 16
          },
          "place_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "example": "+380957791945"
          },
          "address": {
            "type": "string",
            "example": "ул. Седова, 36"
          },
          "directions": {
            "type": "string",
            "example": "возле Автовокзала"
          },
          "map_url": {"type": "string"},
          "website_url": {
            "type": "string",
            "example": "https://www.ostrovclub.zp.ua/"
          },
          "email": {
            "type": "string",
            "example": "example@email.com"
          },
          "instagram_url": {
            "type": "string"
          },
          "place_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Photo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "place_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "url": {
            "type": "string",
            "example": "https://place.com/picture.jpg",
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Price": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Услуга",
            "required": true
          },
          "cost": {
            "type": "integer",
            "format": "int64",
            "required": true
          },
          "place_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "AdditionalService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Услуга",
            "required": true
          },
          "description": {
            "type": "string",
            "example": "Описание услуги",
            "required": true
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "required": true
          },
          "place_id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "required": true
          },
          "created_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "example": "2014-06-26 04:07:31",
            "readOnly": true
          }
        }
      },
      "Upload": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "`http://localhost:3333/uploads/QrEtQFgH.jpg`",
            "required": true
          }
        }
      }
    }
  }
}


